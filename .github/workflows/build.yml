name: Train & Publish Model/API

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  train_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.9'

      - name: Cache Poetry & pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry & configure venv
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run training script
        run: |
          chmod +x scripts/train_model.sh
          ./scripts/train_model.sh

  publish_model:
    name: Publish Latest Model as Release Asset
    needs: train_model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create or update "model-latest" release
        uses: ncipollo/release-action@v1
        with:
          tag: model-latest
          name: Latest Trained Model
          artifacts: 'models/opspilot-latest-model.tar.gz'
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

  push_rasa_image:
    name: Push Rasa API Image to GHCR
    needs: train_model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull & Push Rasa Image
        run: |
          docker pull rasa/rasa:3.6.21-full
          # hier unter deinem User (github.actor), damit keine Org-Beschr√§nkung greift
          docker tag \
            rasa/rasa:3.6.21-full \
            ghcr.io/${{ github.actor }}/rasa:3.6.21-full
          docker push ghcr.io/${{ github.actor }}/rasa:3.6.21-full